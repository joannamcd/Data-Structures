1249. Minimum Remove to Make Valid Parentheses
Given a string s of '(' , ')' and lowercase English characters.

Your task is to remove the minimum number of parentheses ( '(' or ')', in any positions ) 
so that the resulting parentheses string is valid and return any valid string.

Formally, a parentheses string is valid if and only if:

    It is the empty string, contains only lowercase characters, or
    It can be written as AB (A concatenated with B), where A and B are valid strings, or
    It can be written as (A), where A is a valid string.

----------------------------------------------------

class Solution:
    def minRemoveToMakeValid(self, s: str) -> str:
        stack = []
        splitS = list(s)

        for item in range(len(s)):
            if s[item] == '(':
                stack.append(item)
            elif s[item] == ')':
                if stack:
                    stack.pop()
                else:
                    splitS[item] = ''
        for i in stack:
            splitS[i] = ""
        return ''.join(splitS)